语法：
    单个字符
    字符组
    量词
    分组
    特殊边界匹配
    环视边界匹配

单个字符
    字符组
        任意字符
            .   匹配除了换行符的以外的任意字符  例  a.f  匹配 acf  adf
            可指定另外一种匹配模式  单行匹配模式 .匹配任意字符 包括换行符
             指定方式  一： 在正则中以(?s)开头 例 (?s)a.f  二: javaAPI  对应的模式常量为 Pattern.DOTALL

        多个指定字符之一
            [abc] 匹配 a b c中任意一个  方便连续可用[0-9] [a-z] 或 [0-9a-zA-Z_]  若要匹配 - 可用 \- 或放最前面 [-0-9]
            [] 中 除了 ^ - [] / 外 别的字符不具有特殊含义
        字符区间

        排除型字符组
            [^abc] 除了 a b c以外的任意字符  ^需在开头    [a^b] 匹配  a 或 ^ 或 b

        预定义的字符组
            有一些特殊的已/开头的字符 表示预定义的字符组 如
            \d  等同于  [0-9]
            \w  等同于  [a-zA-Z_0-9]
            \s  等同于  [\t\n\x0B\f\r]
            他们都有对应的排除类型字符组，用大写表示 即
            \D  等同于  [^\d]
            还有一类字符组 称为POSIX字符  以\p{...}

量词
    量词是指定出现次数的元字符， 有三个常见的字符: + * ？
    1. +: 表示前面字符的一次或多次出现，  如  ab+c          可匹配  abc  abbc    abbbc
    2. *: 表示前面字符的零次或多次出现，  如  ab*c          可匹配  ac   abbc
    3. ?: 表示0次或者1次                 如  ab?c          可匹配  ac   abc
    4. {m,n} 出现的次数 m到n 包括mn      如  ab{1,10}c
    5. {m}   必须出现次数
    注意 {m,n} 逗号左右不能有空格
    默认是贪婪的 如 正则  <a>.*</a>   匹配 <a>fist</a><a>second</a> 得到一个匹配结果  若要2个 则设置 <a>.*?</a>
    所有的量词都有对应的懒惰形式 如 x??   x*?  x+?  x{m,n}? 等

分组
    表达式可以用()括起来，表示一个分组，分组可以嵌套，分组都有一个默认的编号，按照括号的出现顺序，从1开始
    例 a(bc)((de)(fg))  匹配 abcdefg 第一个分组为 bc  第二个为 defg  第三个为 de  第四个为fg 分组0为特殊分组 表示内容是整个匹配的字符串 这里是abcdefg
    分组匹配的子字符串可以在后续访问，好像被捕获一样
    量词  a(bc)+d  表示bc出现一次或多次
    [] 表示其中的一个字符， ()和'|'一起，表示匹配其中的一个子表达式   如 (http|ftp|file) 匹配http 或 ftp 或 file  注意：| 在 []中没有特殊含义。
    捕获分组
        默认的分组都为捕获分组，有一定的成分，若后续不需要在被引用，为了提高性能 可以改为非捕获分组 语法(?:...) 比如 (?:abc|def)

    回溯引用:
        在正则表达式中，可以使用斜杠\加分组编号引用之前的分组  <(\w+)>(.*)<\1>
        使用数字引用可能会引起混乱，可以对分组进行命名,  (? <name>X)  \k<name> 上面的例子可以写为 <(?<tag>\w+)>(.*)</\k<tag>>

5.特殊边界匹配
    常用的字符边界元字符有 ^ $ \A \Z \z \b   默认是整个字符串
    (默认模式) (^换行符之后 $换行符之前 为一个整体)
    ^开始    ^[^abc] 非abc开始
    $结束     若字符串已换行符结束 $匹配的是换行符之前的边界

    (多行匹配模式)    (^换行符之前 $换行符之后 为一个整体)
    ^开始    ^[^abc] 非abc开始
    $结束     若字符串已换行符结束 $匹配的是换行符之后的边界   切换方式(? m)   如 (? m)^abc$
    \A与^类似，但不管什么模式，它匹配的总是整个字符串的开始边界。
     \Z\z 与$类似，但不管什么模式，它匹配的总是整个字符串的结束边界. 区别 \z取在换行符之前
     \b匹配的是单词边界 如 \bcat\b 匹配的是完整单词cat 不能匹配 category 匹配的是一个边界，满足一边的单词字符，一边不是单词字符

     (不区分大小写的模式)
     指定(? i)

环视边界匹配
    对左右边界有一定的要求， 若不满足则不匹配 分为4种:
    1.肯定顺序环视，语法是 (?=...) 要求右边匹配指定的表达式 如     abc(?=def)  要求c后面要有def才能匹配
    2.否定顺序环视, 语法是 (?!...) 要求右边不匹配指定的表达式 如   s(?!ing)
    3.肯定逆序环视  语法是 (?<=...)  (?<=\s)abc  它的左边必须是空白符
    4.否定逆序环视  语法是  (? <=\s)abc





